/**
 * \file Substructure_UHYDEfbr.h
 * \author Ferran Ob√≥n Santacana
 * \version 1.0 
 * \date 13th of September 2013
 *
 * \brief Routines to deal with substructures that represent the UHYDE-\em fbr device.
 *
 * These routines deal with the creation, destruction and simulation of those substructures that represent the
 * UHYDE-\em fbr device \cite Dorka_1995.
 */

#ifndef SUBSTRUCTURE_UHYDEFBR_H_
#define SUBSTRUCTURE_UHYDEFBR_H_

#include "Substructure.h" /* For MAX_DESCRIPTION */

#define UHYDE_NUMPARAM_INIT 3 /*!< \brief Number of required parameters in order to initialise a substructure
			       * of type UHYDE-\em fbr. */
/**
 * \brief To be used with UHYDE-\em fbr substructures and routines.
 */
typedef struct UHYDEfbrSim {
     double u0c_old;    /*!< \brief Old displacement (the one from the previous sub-step. */
     double q;          /*!< \brief Displacement in the device. */
     double qyield;     /*!< \brief Yield displacement. */
     double qplastic;   /*!< \brief Plastic displacement. */
     double k;          /*!< \brief Initial stiffness. */
     char *Description; /*!< \brief Optional description of the substructure. */
} UHYDEfbrSim_t;

/**
 * \brief Simulates the behaviour of a UHYDE-\em fbr device (1-Dimension).
 *
 * The behaviour of a the friction device UHYDE-\em fbr (\cite Dorka_1995) is simulated. The routine follows the
 * equations given in \cite Pradlwater_1998 adapted for 1-Dimension, where for
 *
 * \f[q_x(t) \leq q_{yield}\f]
 * \f[q_r(t) = k_x\cdot d\f]
 *
 * and for
 * \f[q_{yield} < q_x(t) \leq q_{plastic}\f]
 * \f[q_r(t) = q_x(t)\f]
 *
 * \f[h(q_r,v_r) =
      \begin{cases}
      1 & \text{for $\|q_r\|\leq q_{yield}$ or $q_r v_r \leq 0$}\\
      \frac{q_{plastic} - q_r}{q_{plastic} - q_{yield}} & \text{for $\|q_r\|> q_{yield}$ or $q_r v_r > 0$}
      \end{cases}\f]
 *
 * with \f$v_r = \dot d_x\f$
 *
 * \pre \c Sub should be properly initialised through the Substructure_SimUHYDE_1D_Init() routine.
 *
 * \param[in]  u0c            Input displacement.
 * \param[in]  DeltaT         Time increment.
 * \param[in]  Sub            Substructure of type \c SIM_UHYDE.
 * \param[out] Friction_Force Friction force generated by the UHYDE-\em fbr device.
 */
void Substructure_SimUHYDE_1D( const double u0c, const double DeltaT, UHYDEfbrSim_t *const Sub, double *const Friction_Force );

/**
 * \brief Initialises the parameters of a substructure that simulates the behaviour of the friction device
 * UHYDE-\em fbr (1-Dimension).
 * 
 * \pre \c yield_factor cannot be 0.
 *
 * \param[in]  qyield        Yield displacement.
 * \param[in]  yield_factor  Yield factor. Used to calculate the plastic displacement.
 * \param[in]  Friction      Maximum friction force that will be produced.
 * \param[in]  Description   Brief description of the sub-structure.
 * \param[out] Sub           Substructure of type \c SIM_UHYDE.
 *
 * \post
 * - \c Sub.Description is a duplicate of the string in \c Description.
 * - The memory should be deallocated through Substructure_DeleteCouplingNodes() routine.
 *
 * \sa UHYDEfbr_t, MAX_DESCRIPTION, Substructure_Id.
 */
void Substructure_SimUHYDE_1D_Init( const double qyield, const double yield_factor, const double Friction, const char *Description, UHYDEfbrSim_t *const Sub );

/**
 * \brief Frees the memory dynamically allocated in Substructure_SimUHYDE_1D_Init().
 *
 * \pre \c Sub must be properly initialised through Substructure_SimUHYDE_1D_Init().
 *
 * \param[in,out] Sub Substructure representing a UHYDE-\em fbr device.
 *
 * \post
 * - The memory allocated in \c Sub.Description is freed.
 *
 * \sa UHYDEfbrSim_t and Substructure_SimUHYDE_1D_Init().
 */
void Substructure_SimUHYDE_Destroy( UHYDEfbrSim_t *const Sub );

#endif /* SUBSTRUCTURE_UHYDEFBR_H_ */
